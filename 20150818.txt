1、命令窗口（Command Prompt）或 PowerShell

命令：
$ git config --global user.name "John Doe"
$ git config --global user.email johndoe@example.com
$ git config list
$ git config uer.name

git help <verb>
$ git <verb> --help
$ man git-<verb>
git help config
$ git clone https://github.com/libgit2/libgit2 mylibgit
http://git-scm.com/book/zh/v2/%E5%85%B6%E5%AE%83%E7%8E%AF%E5%A2%83%E4%B8%AD%E7%9A%84-Git-%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2


1,从已有的分支创建新的分支(如从master分支),创建一个dev分支

git checkout -b dev

2,创建完可以查看一下,分支已经切换到dev

git branch

    * dev

    master

3,提交该分支到远程仓库

git push origin dev

4,测试从远程获取dev

git pull origin dev

或者：

如果用命令行，运行 git fetch，可以将远程分支信息获取到本地，再运行 git checkout -b local-branchname origin/remote_branchname  就可以将远程分支映射到本地命名为local-branchname  的一分支

5,我觉得现在重要的就是设置git push,pull默认的提交获取分支,这样就很方便的使用git push 提交信息或git pull获取信息

git branch --set-upstream-to=origin/dev

取消对master的跟踪

git branch --unset-upstream master

6,现在随便修改一下工程文件的内容,然后git commit ,git push,之后就可以直接提交到远程的dev分支中,而不会是master




m：
git clone http://gitlab.bailitop.com/dongxuepeng/test.git mengbaoqing


cd mengbaoqing

git config user.user "mengbaoqing"
git config user.email "1129514277@qq.com"
git branch mengbaoqing
git checkout mengbaoqing
ls
touch mengbaoqing.txt
git add mengbaoqing.txt
git commit -m "1"
git push origin mengbaoqing


d：
git branch dev
git pull origin dev
git branch mengbaoqing
git checkout mengbaoqing
git pull origin mengbaoqing
git checkout dev
git merge orinig mengbaoqing
git checkout master
ls

